import asyncio
from aiogram import Bot, types
from aiogram.dispatcher import Dispatcher
from aiogram.utils import executor
from aiogram.dispatcher.filters import Text
from freeGPT import Client
from googletrans import Translator

bot = Bot(token='6846549120:AAHWXClbIO1iBFl-NhKOeY9ukPfpgibtBSw')
dp = Dispatcher(bot)
translator = Translator()
text = " "
target_language = 'ru'

"""
while True:
    prompt = input("üë¶: ")
    try:
        resp = Client.create_completion("gpt3", prompt)
        print(f"ü§ñ: {resp}")
    except Exception as e:
        print(f"ü§ñ: {e}")"""


async def generate_response(message_text):
    try:
        response = Client.create_completion("gpt3", message_text)
        result = translator.translate(response, dest=target_language)
        result = result.text
        # print(result)
        return result
    except:
        print("error")

@dp.message_handler(commands=["start"])
async def start(message: types.Message):
    await message.reply("–ü—Ä–∏–≤–µ—Ç —ç—Ç–æ –±–µ—Å–ø–ª–∞—Ç–Ω—ã–π –±–æ—Ç –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Ç–µ–∫—Å—Ç–∞. –°–ø–æ–º–æ—â—é –º–æ–¥–µ–ª–∏ GPT4.0")


@dp.message_handler(commands=["help"])
async def help_command(message: types.Message):
    await message.reply("–ü—Ä–∏–≤–µ—Ç!\n–ß—Ç–æ–±—ã —è –æ—Ç–ø—Ä–∞–≤–∏–ª —Ç–µ–±–µ —Å–≥–µ–Ω–∏—Ä–∏—Ä–æ–≤–∞–Ω—ã–π —Ç–µ–∫—Å—Ç –ø–æ —Ç–≤–æ–µ–º—É –∑–∞–ø—Ä–æ—Å—É —Ç—ã –¥–æ–ª–∂–µ–Ω –º–Ω–µ –Ω–∞–ø–∏—Å–∞—Ç—å —Å–≤–æ–π –∑–∞–ø—Ä–æ—Å\n–ò —è –æ—Ç–ø—Ä–∞–≤–ª—é —Ç–µ–±–µ —Å–≥–µ–Ω–∏—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –æ—Ç–≤–µ—Ç –Ω–∞ —Ç–æ–≤–æ–π –∑–∞–ø—Ä–æ—Å!")

@dp.message_handler(content_types=types.ContentType.TEXT)
async def gpt_generate(message: types.Message):
    await message.reply("–ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ç–µ–∫—Å—Ç–∞")
    try:
        result = await generate_response(message.text)
        await message.reply(result)
    except:
        await message.reply("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Ç–µ–∫—Å—Ç–∞ –ø–æ –≤–∞—à–µ–º—É –∑–∞–ø—Ä–æ—Å—É")

#keep_alive()

if __name__ == '__main__':
    executor.start_polling(dp) 